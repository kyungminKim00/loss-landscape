// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.0/containers/docker-existing-dockerfile
{
	"name": "loss-landscape",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Dockerfile",
	
	// $(id -u kmkim) -> 1000, $(id -g kmkim) -> 1000
	"runArgs": [
		"-u",
		"1000:1000",
		"--gpus",
		"all",
		"-v",
		"/etc/passwd:/etc/passwd:ro",
		"-v",
		"/etc/group:/etc/group:ro",
		"-v",
		"${localEnv:DATAHOME}/loss-landscape/trained_nets:/workspaces/loss-landscape/src/trained_nets",
		"-v",
		"${localEnv:DATAHOME}/loss-landscape/data:/workspaces/loss-landscape/src/cifar10/data"
	],
	"remoteEnv": {"PYTHONPATH": "${containerEnv:PATH}:/workspaces/loss-landscape/src"},
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [8888, 8787, 8786],
	"forwardPorts": [22],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ ],
	
	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": ,
		
	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "kmkim",
	
	//which black, pymy, pylint
	"settings": { 
		"python.linting.enabled": true,
		"python.linting.pylintEnabled": true,
		"python.formatting.blackPath": "/home/kmkim/.local/bin/black",
		"python.linting.mypyPath": "/usr/local/bin/mypy",
		"python.linting.pylintPath": "/home/kmkim/.local/binsxx/pylint",
		"python.envFile": "${workspaceFolder}/.vscode/.env",
		"python.formatting.provider": "black",
		"python.linting.mypyEnabled": true,
		"python.linting.mypyArgs": [
			"--strict",
			"src/*.py"
		],
		"python.testing.unittestEnabled": false,
		"python.testing.unittestArgs": [
			"-v",
			"-s",
			"./test",
			"-p",
			"*_test.py"
		],
		"python.testing.pytestEnabled": true,
		"python.testing.pytestPath": "pytest",
		"python.testing.pytestArgs": [
			"--exitfirst",
			"--verbose"
		],
		"python.testing.autoTestDiscoverOnSaveEnabled": true,
		"python.isort.args": [
			"--profile", "black"
		],
		"python.languageServer": "Pylance",
		
		"[python]": {
			"editor.formatOnSave": true,
			"editor.codeActionsOnSave": {
				"source.organizeImports": true
				}
			},
			"editor.tabSize": 4,
			"github.gitProtocol": "ssh",
			"files.autoSave": "onFocusChange",
			"python.analysis.inlayHints.functionReturnTypes": false,
			"python.analysis.inlayHints.variableTypes": false
        
	},

	"extensions": [
		"donjayamanne.python-extension-pack",
		"trixnz.go-to-method",
		"GitHub.vscode-pull-request-github",
		"magicstack.MagicPython",
		"msrvida.vscode-sanddance",
		"ms-toolsai.jupyter",
		"GrapeCity.gc-excelviewer"
		]
	
}
